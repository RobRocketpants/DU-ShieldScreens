{"slots":{"0":{"name":"slot2","type":{"events":[],"methods":[]}},"1":{"name":"slot1","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"RGBcolor1 = \"201,164,61\" --export: Shield Bar, Highlight and Update color\nRGBcolor2 = \"135,206,235\" --export: Outlines, Text and Controls color\nRGBbackground = \"0,26,26\" --export: Background color\n\nTTA_Logo = false --export:\nFOX_Logo = true --export: \n\nfunction validateComp(n,dc)\n    local c = n\n    if type(n)~=\"number\" then\n        c=dc\n    else\n        if n>255 then c=255 end\n        if n<0 then c=0 end\n    end    \n    return c\nend\n\nfunction validateRGB(t,d)\n    local o = {}\n    if #t~=3 then\n        o = d\n    else\n        o[1] = validateComp(t[1],d[1])\n        o[2] = validateComp(t[2],d[2])\n        o[3] = validateComp(t[3],d[3])\n    end\n    return o\nend\n\nfunction colorSplit(col)\n    local colt = {}\n    for match in (col..\",\"):gmatch(\"(.-),\") do\n        table.insert(colt, tonumber(match));\n    end   \n    return colt\nend\n\ncolor1 = colorSplit(RGBcolor1)\ncolor2 = colorSplit(RGBcolor2)\nbg = colorSplit(RGBbackground)\n\ncolor1 = validateRGB(color1,{201,164,61})\ncolor2 = validateRGB(color2,{135,206,235})\nbg = validateRGB(bg,{0,26,26})\n\nlocal FOXlogo = [[\n    local fontf = getFont('Montserrat-Bold',15)\n    setDefaultFillColor(layer, Shape_Polygon, color.r, color.g, color.b, 1)\n    setDefaultFillColor(layer, Shape_Box, color.r, color.g, color.b, 1)\n    setDefaultStrokeColor(layer, Shape_Box, color.r, color.g, color.b, 1)\n    setDefaultStrokeWidth(layer, Shape_Box, 0)\n    setDefaultStrokeColor(layer, Shape_Polygon, color.r, color.g, color.b, 1)\n    setDefaultStrokeWidth(layer, Shape_Polygon, 0)\n    addBox(layer, rx/2 -3, ry -45, 6, 6)\n    addQuad(layer, rx/2 +3, ry -45, rx/2 +9, ry -51, rx/2 +15, ry -51, rx/2 +3, ry -39)\n    addQuad(layer, rx/2 -3, ry -45, rx/2 -9, ry -51, rx/2 -15, ry -51, rx/2 -3, ry -39)\n    addBox(layer, rx/2 -15, ry -69, 6, 18)\n    addBox(layer, rx/2 +9, ry -69, 6, 18)\n    addTriangle(layer, rx/2 -15, ry -69, rx/2 -15, ry -81, rx/2 -3, ry -69)\n    addTriangle(layer, rx/2 +15, ry -69, rx/2 +15, ry -81, rx/2 +3, ry -69)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Bottom)\n    setDefaultFillColor(layer, Shape_Text, color.r, color.g, color.b, 1)\n    addText(layer, fontf, 'FOX Technology', rx/2, ry - 15)\n]]\n\nlocal TTAlogo = [[\n    setDefaultStrokeColor(layer, Shape_Polygon, color.r, color.g, color.b, 1)\n    setDefaultStrokeWidth(layer, Shape_Polygon, 0)\n    setDefaultFillColor(layer, Shape_Polygon, 1, 1, 1, 1)\n    addQuad(layer, rx/2 -3, ry -25, rx/2 -8, ry -30, rx/2 -8, ry -10, rx/2 -3, ry -5)\n    addQuad(layer, rx/2 +8, ry -30, rx/2 +3, ry -25, rx/2 +3, ry -5, rx/2 +8, ry -10)\n    addQuad(layer, rx/2 -50, ry -55, rx/2 -45, ry -50, rx/2 -8, ry -50, rx/2 -8, ry -55)\n    addQuad(layer, rx/2 -40, ry -45, rx/2 -35, ry -40, rx/2 -8, ry -40, rx/2 -8, ry -45)\n    addQuad(layer, rx/2 +50, ry -55, rx/2 +45, ry -50, rx/2 +8, ry -50, rx/2 +8, ry -55)\n    addQuad(layer, rx/2 +40, ry -45, rx/2 +35, ry -40, rx/2 +8, ry -40, rx/2 +8, ry -45)\n    setDefaultFillColor(layer, Shape_Polygon, color.r, color.g, color.b, 1)\n    addQuad(layer, rx/2 -50, ry -75, rx/2 -45, ry -70, rx/2 +45, ry -70, rx/2 +50, ry -75)\n    addQuad(layer, rx/2 -40, ry -65, rx/2 -35, ry -60, rx/2 -8, ry -60, rx/2 -3, ry -65)\n    addQuad(layer, rx/2 +3, ry -65, rx/2 +8, ry -60, rx/2 +35, ry -60, rx/2 +40, ry -65)\n    addQuad(layer, rx/2 -8, ry -60, rx/2 -3, ry -65, rx/2 -3, ry -25, rx/2 -8, ry -30)\n    addQuad(layer, rx/2 +3, ry -65, rx/2 +8, ry -60, rx/2 +8, ry -30, rx/2 +3, ry -25)\n]]\n\nlocal screenLogo = [[]]\n\nif TTA_Logo then screenLogo = TTAlogo end\nif FOX_Logo then screenLogo = FOXlogo end\n\nunit.hide()\n\nscreens={}\n\nfor e,f in pairs(unit)do \n    if type(f)==\"table\"and type(f.export)==\"table\"then\n        if f.getElementClass then\n            if f.getElementClass()==\"ScreenUnit\"then \n                screens[#screens+1]=f\n            elseif string.sub(f.getElementClass(),1,6)==\"Shield\"then \n                shield=f\n            end \n        end \n    end \nend\n\nif not next(screens) then\n    system.print(\"No screen found\")\n    unit.exit()\nend\n\nif shield == nil then\n   system.print(\"No shield found\")\n    unit.exit()\nend\n\nlocal params = {\n    shieldState = shield.getState(),\n    shieldHP = shield.getShieldHitpoints(),\n    shieldMaxHP = shield.getMaxShieldHitpoints(),\n    shieldIsVenting = shield.isVenting(),\n    shieldVentingCooldown = shield.getVentingCooldown(),\n    shieldVentingMaxCooldown = shield.getVentingMaxCooldown(),\n    shieldResistances = shield.getResistances(),\n    shieldResistancesCooldown = shield.getResistancesCooldown(),\n    shieldResistancesMaxCooldown = shield.getResistancesMaxCooldown(),\n    shieldResistancesPool = shield.getResistancesPool(),\n    shieldResistancesRemaining = shield.getResistancesRemaining(),\n    shieldStressRatio = shield.getStressRatioRaw(),\n    lastTime = system.getTime()\n}\n\n\n\nlocal renderScript = [[\nlocal json = require('dkjson')\nlocal params = json.decode(getInput()) or {}\n\nlocal newParams = not (lastUpdate == params.lastTime)\nlastUpdate = params.lastTime\nlocal setAMRes = params.shieldResistances[1]*100\nlocal setEMRes = params.shieldResistances[2]*100\nlocal setKNRes = params.shieldResistances[3]*100\nlocal setTHRes = params.shieldResistances[4]*100\nlocal AMStress = params.shieldStressRatio[1] \nlocal EMStress = params.shieldStressRatio[2]\nlocal KNStress = params.shieldStressRatio[3]\nlocal THStress = params.shieldStressRatio[4]\nparams.shieldResistancesPool = params.shieldResistancesPool*100\n\nif not curAMRes then curAMRes = setAMRes end\nif not curEMRes then curEMRes = setEMRes end\nif not curKNRes then curKNRes = setKNRes end\nif not curTHRes then curTHRes = setTHRes end\n\n\n\ncolor = params.color or {r=]]..(color1[1]/255)..[[,g=]]..(color1[2]/255)..[[,b=]]..(color1[3]/255)..[[}\ncolor2 = {r=]]..(color2[1]/255)..[[,g=]]..(color2[2]/255)..[[,b=]]..(color2[3]/255)..[[}\n\n\n\n--------------------------------------------------------------------------------\n\nlocal rx, ry = getResolution()\nlocal layer = createLayer()\nlocal debug_layer = createLayer()\nlocal cx, cy = getCursor()\n\n--local sx, sy = getTextBounds(font, message)\nsetDefaultStrokeColor(layer, Shape_Line, 1, 1, 1, 0.5)\nsetBackgroundColor(]]..(bg[1]/255)..[[,]]..(bg[2]/255)..[[,]]..(bg[3]/255)..[[)\n\n\n--------------------------------------------------------------------------------\n\nlocal fontCache = {}\nfunction getFont (font, size)\n    local k = font .. '_' .. tostring(size)\n    if not fontCache[k] then fontCache[k] = loadFont(font, size) end\n    return fontCache[k]\nend\n\nfunction drawCursor ()\n    if cx < 0 then return end\n    --addLine(layer, 0, cy, rx, cy)\n    --addLine(layer, cx, 0, cx, ry)\n    if getCursorDown() then\n        setDefaultShadow(layer, Shape_Line, 32, color.r, color.g, color.b, 0.5)\n    end\n    --addLine(layer, cx - 12, cy - 12, cx - 7, cy - 12)\n    --addLine(layer, cx - 12, cy - 12, cx - 12, cy - 7)\n    --addLine(layer, cx + 7, cy - 12, cx + 12, cy - 12)\n    --addLine(layer, cx + 12, cy - 12, cx + 12, cy - 7)\n    --addLine(layer, cx - 12, cy + 7, cx - 12, cy + 12)\n    --addLine(layer, cx - 12, cy + 12, cx -7, cy + 12)\n    --addLine(layer, cx + 12, cy + 7, cx + 12, cy + 12)\n    --addLine(layer, cx + 7, cy + 12, cx + 12, cy + 12)\n    setDefaultShadow(layer, Shape_Line, 32, color.r, color.g, color.b, 0)\n    addTriangle(layer, cx, cy, cx, cy + 20, cx + 15 , cy + 15)\n    setNextStrokeWidth(layer, 2)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    addLine(layer, cx + 3, cy + 8, cx + 11, cy + 26) \n\nend\n\nfunction prettyStr (x)\n    if type(x) == 'table' then\n        local elems = {}\n        for k, v in pairs(x) do\n            table.insert(elems, string.format('%s = %s', prettyStr(k), prettyStr(v)))\n        end\n        return string.format('{%s}', table.concat(elems, ', '))\n    elseif type(x) == 'number' then\n        x = math.floor(x)\n        --local left,num,right = string.match(x,'^([^%d]*%d)(%d*)(.-)$')\n        --return left..(num:reverse():gsub('(%d%d%d)','%1,'):reverse())..right\n        return tostring(math.floor(x)):reverse():gsub(\"(%d%d%d)\",\"%1,\"):gsub(\",(%-?)$\",\"%1\"):reverse()\n    else\n        return tostring(x)\n    end\nend\n\nfunction drawParams ()\n    local font = getFont('RobotoMono', 11)\n    setNextTextAlign(debug_layer, AlignH_Left, AlignV_Bottom)\n    addText(debug_layer, font, \"Script Parameters\", 16, 180)\n    local y = 196\n    for k, v in pairs(params) do\n        setNextTextAlign(debug_layer, AlignH_Left, AlignV_Bottom)\n        addText(debug_layer, font, k .. ' = ' .. prettyStr(v), 24, y)\n        y = y + 12\n    end\n    setNextTextAlign(debug_layer, AlignH_Left, AlignV_Bottom)\n    addText(debug_layer, font, 'New = ' .. prettyStr(AMStress), 24, y)\n    y = y + 12\n    for k, v in pairs(params.shieldResistances) do\n        setNextTextAlign(debug_layer, AlignH_Left, AlignV_Bottom)\n        addText(debug_layer, font, k .. ' = ' .. tostring(v*100), 24, y)\n        y = y + 12\n    end\nend\n\nfunction drawShieldBar ()\n    local fontl = getFont('Play-Bold', 30)\n    local fontm = getFont('Play-Bold', 25)\n    local fonts = getFont('Play-Bold', 14)\n\n    if params.shieldState == 1 then message = '' else message = 'INACTIVE' end\n    if params.shieldMaxHP == 0 then message = 'SHIELD BP BUG - PICK UP AND DROP SHIELD' end\n    \n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    setDefaultFillColor(layer,Shape_Text, color.r, color.g, color.b, 1.0)\n    addText(layer, fontl, prettyStr(params.shieldHP), 32,70)\n    sx, sy = getTextBounds(fontl, prettyStr(params.shieldHP))\n    setNextTextAlign(layer, AlignH_Right, AlignV_Bottom)\n    if params.shieldMaxHP == 0 then\n        addText(layer, fontm, '0%', rx - 32,70)\n    else\n        addText(layer, fontm, prettyStr((params.shieldHP/params.shieldMaxHP)*100)..'%', rx - 32,70)\n    end\n    \n        \n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    setDefaultFillColor(layer,Shape_Text, color2.r, color2.g, color2.b, .5)\n    addText(layer, fontm, ' / '..prettyStr(params.shieldMaxHP), 32 + sx,70)\n    \n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    addText(layer, fontm, 'GENERATED SHIELD', 32, 32)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    addText(layer, fonts, 'LOW', 32, 146)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Bottom)\n    addText(layer, fonts, 'MEDIUM', rx/2, 146)\n    setNextTextAlign(layer, AlignH_Right, AlignV_Bottom)\n    addText(layer, fonts, 'HIGH', rx - 32, 146)\n    \n    setDefaultFillColor(layer,Shape_Text, color2.r, color2.g, color2.b, 1)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    addText(layer, fonts, '0', 32, 162)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Bottom)\n    addText(layer, fonts, prettyStr(params.shieldMaxHP/2), rx/2, 162)\n    setNextTextAlign(layer, AlignH_Right, AlignV_Bottom)\n    addText(layer, fonts, prettyStr(params.shieldMaxHP), rx - 32, 162)\n\n\n    \n    setNextFillColor(layer, 0,0,0, 0)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    setNextStrokeWidth(layer, 2)\n    addBoxRounded(layer, 32, 82, rx - 64, 48, 8)\n    setNextShadow(layer, 64, color.r, color.g, color.b, 0.4)\n    setNextFillColor(layer, color.r, color.g, color.b, 0.5+(0.5*params.shieldState))\n    if params.shieldMaxHP > 0 then\n        addBoxRounded(layer, 32, 82, (rx - 64)*(params.shieldHP/params.shieldMaxHP), 48, 8)\n        setNextFillColor(layer, 0, 0, 0, .3)\n    end\n    \n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    addText(layer, fontl, message, rx/2,106) \nend\n\nfunction drawButtons ()\n    local fonts = getFont('Play-Bold', 25)\n    if params.shieldState == 0 then\n        setNextFillColor(layer, 0,0,0, 0)\n        setDefaultFillColor(layer, Shape_Text, color2.r, color2.g, color2.b, 1)\n        buttontext = \"ACTIVATE\"\n    else\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n        setDefaultFillColor(layer, Shape_Text, 0, 0, 0, 0.7)\n        buttontext = \"DEACTIVATE\"\n    end\n    \n    if params.shieldIsVenting == 1 then\n        vtext = \"STOP VENTING\"\n    else\n        if params.shieldVentingCooldown > 0 then\n            vtext = 'VENT COOLDOWN '..prettyStr(params.shieldVentingCooldown)\n        else\n            vtext = \"START VENTING\"\n        end\n    end\n    \n    if cx > 32 and cx < 332 and cy > (ry - 80) and cy < (ry - 32) then\n        shade = 32\n        if getCursorPressed() then setOutput('Toggle') end\n    else\n        shade = 8\n    end\n    \n    if cx > (rx - 332) and cx < (rx - 32) and cy > (ry - 80) and cy < (ry - 32) then\n        vshade = 32\n        if getCursorPressed() then \n            if params.shieldIsVenting == 1 then setOutput('StopVent') else setOutput('StartVent') end\n        end\n    else\n        vshade = 8\n    end\n    \n    \n    setNextStrokeColor(layer, color2.r, color2.g, color2.b, 1)\n    setNextStrokeWidth(layer, 1)\n    setNextShadow(layer, shade, color2.r, color2.g, color2.b, 0.4)\n    addBoxRounded(layer, 32, ry - 80, 300, 48, 2)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    addText(layer, fonts, buttontext, 182,ry - 56) \n\n    setNextFillColor(layer, color.r,color.g,color.b, 1)\n    setNextStrokeColor(layer, color2.r, color2.g, color2.b, 1)\n    setNextStrokeWidth(layer, 1)\n    setNextShadow(layer, vshade, color2.r, color2.g, color2.b, 0.4)\n    addBoxRounded(layer, rx - 332, ry - 80, 300, 48, 2)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, 0,0,0, 0.7)\n    addText(layer, fonts, vtext, rx - 182,ry - 56) \n    \n    if curAMRes==setAMRes and curEMRes==setEMRes and curKNRes==setKNRes and curTHRes==setTHRes then\n        canSet=0\n        setDefaultFillColor(layer, Shape_Text,1,1,1, 0.5)\n    else\n        canSet=1\n        setDefaultFillColor(layer, Shape_Text,0,0,0, 0.7)\n    end\n    \n    setNextFillColor(layer,color2.r,color2.g,color2.b,1)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Middle)\n    addText(layer, fonts, '/ '..prettyStr(params.shieldResistancesPool), 198,242)\n    if canSet==1 then\n        setNextFillColor(layer,color.r,color.g,color.b,1)\n    else\n        setNextFillColor(layer,color2.r,color2.g,color2.b,1)\n    end\n    setNextTextAlign(layer, AlignH_Right, AlignV_Middle)\n    addText(layer, fonts, prettyStr(params.shieldResistancesPool-curAMRes-curEMRes-curKNRes-curTHRes), 190,242)\n    \n    if params.shieldResistancesCooldown > 0 then\n        settext = 'SET COOLDOWN '..prettyStr(params.shieldResistancesCooldown)\n        canSet=0\n    else\n        settext = 'SET'\n    end\n    \n    if cx > 64 and cx < 332 and cy > 345 and cy < 393 and canSet==1 then\n        setshade = 16\n        if getCursorPressed() then\n            local resout = {curAMRes/100, curEMRes/100, curKNRes/100, curTHRes/100}\n            setOutput(json.encode(resout))    \n        end\n    else\n        setshade = 8\n    end\n    \n    setNextFillColor(layer, color.r,color.g,color.b, canSet)        \n    setNextStrokeColor(layer, color2.r, color2.g, color2.b, 1)\n    setNextStrokeWidth(layer, 1)\n    setNextShadow(layer, setshade, color2.r, color2.g, color2.b, 0.4)\n    addBoxRounded(layer, 64, 345, 268, 48, 2)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    addText(layer, fonts, settext, 198,369) \n    \n    if cx > 64 and cx < 332 and cy > 405 and cy < 453 then\n        reshade = 16\n        if getCursorPressed() then\n            curAMRes=0\n            curEMRes=0\n            curKNRes=0\n            curTHRes=0\n        end\n    else\n        reshade = 8\n    end\n\n    setNextFillColor(layer, 0,0,0,0)        \n    setNextStrokeColor(layer, color2.r, color2.g, color2.b, 1)\n    setNextStrokeWidth(layer, 1)\n    setNextShadow(layer, reshade, color2.r, color2.g, color2.b, 0.4)\n    addBoxRounded(layer, 64, 405, 268, 48, 2)\n    setNextFillColor(layer, color2.r, color2.g, color2.b, 1)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    addText(layer, fonts, 'RESET', 198,429) \n    \nend\n\nfunction drawPBWarn ( message )\n    pb_layer = createLayer()\n    setNextFillColor(pb_layer, 0, 0, 0, .8)\n    addBox(pb_layer, 0, 0, rx, ry)\n    --message='START THE PROGRAMMING BOARD TO USE'\n    local wfont = getFont('Play-Bold', 40)\n    local sx, sy = getTextBounds(wfont, message)\n\n    \n    setDefaultStrokeColor(pb_layer, Shape_Line, 1, 1, 1, 0.5)\n    setNextShadow(pb_layer, 64, color.r, color.g, color.b, 0.4)\n    setNextFillColor(pb_layer, color.r, color.g, color.b, 1.0)\n    addBoxRounded(pb_layer, (rx-sx-16)/2, (ry-sy-16)/2, sx+16, sy+16, 8)\n    setNextFillColor(pb_layer, 0, 0, 0, 1)\n    setNextTextAlign(pb_layer, AlignH_Center, AlignV_Middle)\n    addText(pb_layer, wfont, message, rx/2,ry/2)\n    \nend\n\nfunction drawResSettings ()\n    setNextFillColor(layer, color2.r, color2.g, color2.b, 0.05)\n    addBox(layer, 32, 176, rx - 64, ry - 268)\n    stage = 25\n    local wfont = getFont('Play-Bold', 12)\n    local nfont = getFont('Play-Bold', 15)\n    \n    setDefaultFillColor(layer, Shape_Box, color2.r,color2.g,color2.b, 0.2)\n    addBox(layer, 384, 225, 220, 35)\n    addBox(layer, 384, 285, 220, 35)\n    addBox(layer, 384, 345, 220, 35)\n    addBox(layer, 384, 405, 220, 35)\n    setDefaultFillColor(layer, Shape_Box, color2.r,color2.g,color2.b, 0.1)\n    addBox(layer, 604, 225, 360, 33)--242\n    addBox(layer, 604, 285, 360, 33)--302\n    addBox(layer, 604, 345, 360, 33)--362\n    addBox(layer, 604, 405, 360, 33)--422\n    setDefaultFillColor(layer, Shape_Text, color2.r,color2.g,color2.b, 1)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Bottom)\n    addText(layer, wfont, 'ENERGY POOL', 198, 220)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    addText(layer, wfont, 'SHIELD SETTINGS (%)', 384, 220)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Bottom)\n    addText(layer, wfont, 'STRESS', 860, 220)\n    setDefaultFillColor(layer, Shape_Text, color2.r,color2.g,color2.b, 0.5)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Middle)\n    addText(layer, wfont, 'ANTIMATTER', 400, 242)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Middle)\n    addText(layer, wfont, 'ELECTROMAGNETIC', 400, 302)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Middle)\n    addText(layer, wfont, 'KINETIC', 400, 362)\n    setNextTextAlign(layer, AlignH_Left, AlignV_Middle)\n    addText(layer, wfont, 'THERMAL', 400, 422)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, wfont, 'Base', 623, 229)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, nfont, '10', 623, 242)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, wfont, 'Base', 623, 289)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, nfont, '10', 623, 302)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, wfont, 'Base', 623, 349)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, nfont, '10', 623, 362)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, wfont, 'Base', 623, 409)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Top)\n    addText(layer, nfont, '10', 623, 422)\n    setDefaultFillColor(layer, Shape_Box, 0,0,0,0)\n    setDefaultStrokeColor(layer, Shape_Box, 0,0.1,0.1, 1)\n    setDefaultStrokeWidth(layer, Shape_Box, 1)\n    addBox(layer, 800, 233, 150, 18)\n    addBox(layer, 800, 293, 150, 18)\n    addBox(layer, 800, 353, 150, 18)\n    addBox(layer, 800, 413, 150, 18)\n    setNextFillColor(layer, 1, 0, 0, .7)\n    setNextShadow(layer, 8, 1, 0, 0, AMStress)\n    addBox(layer, 800, 233, 150*AMStress, 18)\n    setNextFillColor(layer, 1, 0, 0, .7)\n    setNextShadow(layer, 8, 1, 0, 0, EMStress)\n    addBox(layer, 800, 293, 150*EMStress, 18)\n    setNextFillColor(layer, 1, 0, 0, .7)\n    setNextShadow(layer, 8, 1, 0, 0, KNStress)\n    addBox(layer, 800, 353, 150*KNStress, 18)\n    setNextFillColor(layer, 1, 0, 0, .7)\n    setNextShadow(layer, 8, 1, 0, 0, THStress)\n    addBox(layer, 800, 413, 150*THStress, 18)\n    setDefaultStrokeColor(layer, Shape_Line, color2.r,color2.g,color2.b, 0.2)\n    addLine(layer,354,267,384,267)\n    addLine(layer,354,327,384,327)\n    addLine(layer,354,387,384,387)\n    addLine(layer,354,447,384,447)\n    addLine(layer,354,267,354,447)\n    addLine(layer,198,300,354,300)\n    addLine(layer,198,260,198,300)\n    setNextStrokeColor(layer,color2.r,color2.g,color2.b, 0.2)\n    addBox(layer,64,225,268,35)\n    \n    setNextFillColor(layer, 0,0,0, 0)\n    setNextStrokeColor(layer, 0,0.1,0.1, 1)\n    setNextStrokeWidth(layer, 1)\n    addBox(layer, 384, 260, 350, 15)\n    if cx > 384 and cx < 874 and cy > 260 and cy < 275 then\n        if getCursorDown() then\n            curAMRes = 0\n            if cx > 384+stage*2 then if (curEMRes+curKNRes+curTHRes)<=55 then curAMRes = 5 end end\n            if cx > 384+stage*3 then if (curEMRes+curKNRes+curTHRes)<=50 then curAMRes = 10 end end\n            if cx > 384+stage*4 then if (curEMRes+curKNRes+curTHRes)<=45 then curAMRes = 15 end end\n            if cx > 384+stage*5 then if (curEMRes+curKNRes+curTHRes)<=40 then curAMRes = 20 end end\n            if cx > 384+stage*6 then if (curEMRes+curKNRes+curTHRes)<=35 then curAMRes = 25 end end\n            if cx > 384+stage*7 then if (curEMRes+curKNRes+curTHRes)<=30 then curAMRes = 30 end end\n            if cx > 384+stage*8 then if (curEMRes+curKNRes+curTHRes)<=25 then curAMRes = 35 end end\n            if cx > 384+stage*9 then if (curEMRes+curKNRes+curTHRes)<=20 then curAMRes = 40 end end\n            if cx > 384+stage*10 then if (curEMRes+curKNRes+curTHRes)<=15 then curAMRes = 45 end end\n            if cx > 384+stage*11 then if (curEMRes+curKNRes+curTHRes)<=10 then curAMRes = 50 end end\n            if cx > 384+stage*12 then if (curEMRes+curKNRes+curTHRes)<=5 then curAMRes = 55 end end\n            if cx > 384+stage*13 then if (curEMRes+curKNRes+curTHRes)==0 then curAMRes = 60 end end\n        end\n    end\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    addText(layer, nfont, '+'..prettyStr(curAMRes), 663, 242)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    if curAMRes == setAMRes then\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n        addText(layer, nfont, prettyStr(curAMRes+10), 703, 242)\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    else\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n        addText(layer, nfont, prettyStr(curAMRes+10), 703, 242)\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n    end\n    addBox(layer, 384, 260, stage*(curAMRes/5+2), 15)\n    setNextStrokeWidth(layer, 2)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    addLine(layer, 384+(stage*(setAMRes/5+2)), 260, 384+(stage*(setAMRes/5+2)), 275)\n\n    \n    setNextFillColor(layer, 0,0,0, 0)\n    setNextStrokeColor(layer, 0,0.1,0.1, 1)\n    setNextStrokeWidth(layer, 1)\n    addBox(layer, 384, 320, 350, 15)\n    if cx > 384 and cx < 874 and cy > 320 and cy < 335 then\n        if getCursorDown() then\n            curEMRes = 0\n            if cx > 384+stage*2 then if (curAMRes+curKNRes+curTHRes)<=55 then curEMRes = 5 end end\n            if cx > 384+stage*3 then if (curAMRes+curKNRes+curTHRes)<=50 then curEMRes = 10 end end\n            if cx > 384+stage*4 then if (curAMRes+curKNRes+curTHRes)<=45 then curEMRes = 15 end end\n            if cx > 384+stage*5 then if (curAMRes+curKNRes+curTHRes)<=40 then curEMRes = 20 end end\n            if cx > 384+stage*6 then if (curAMRes+curKNRes+curTHRes)<=35 then curEMRes = 25 end end\n            if cx > 384+stage*7 then if (curAMRes+curKNRes+curTHRes)<=30 then curEMRes = 30 end end\n            if cx > 384+stage*8 then if (curAMRes+curKNRes+curTHRes)<=25 then curEMRes = 35 end end\n            if cx > 384+stage*9 then if (curAMRes+curKNRes+curTHRes)<=20 then curEMRes = 40 end end\n            if cx > 384+stage*10 then if (curAMRes+curKNRes+curTHRes)<=15 then curEMRes = 45 end end\n            if cx > 384+stage*11 then if (curAMRes+curKNRes+curTHRes)<=10 then curEMRes = 50 end end\n            if cx > 384+stage*12 then if (curAMRes+curKNRes+curTHRes)<=5 then curEMRes = 55 end end\n            if cx > 384+stage*13 then if (curAMRes+curKNRes+curTHRes)==0 then curEMRes = 60 end end\n        end\n    end\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    addText(layer, nfont, '+'..prettyStr(curEMRes), 663, 302)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    if curEMRes == setEMRes then\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n        addText(layer, nfont, prettyStr(curEMRes+10), 703, 302)\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    else\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n        addText(layer, nfont, prettyStr(curEMRes+10), 703, 302)\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n    end\n    addBox(layer, 384, 320, stage*(curEMRes/5+2), 15)\n    setNextStrokeWidth(layer, 2)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    addLine(layer, 384+(stage*(setEMRes/5+2)), 320, 384+(stage*(setEMRes/5+2)), 335)\n    \n    setNextFillColor(layer, 0,0,0, 0)\n    setNextStrokeColor(layer, 0,0.1,0.1, 1)\n    setNextStrokeWidth(layer, 1)\n    addBox(layer, 384, 380, 350, 15)\n    if cx > 384 and cx < 874 and cy > 380 and cy < 395 then\n        if getCursorDown() then\n            curKNRes = 0\n            if cx > 384+stage*2 then if (curAMRes+curEMRes+curTHRes)<=55 then curKNRes = 5 end end\n            if cx > 384+stage*3 then if (curAMRes+curEMRes+curTHRes)<=50 then curKNRes = 10 end end\n            if cx > 384+stage*4 then if (curAMRes+curEMRes+curTHRes)<=45 then curKNRes = 15 end end\n            if cx > 384+stage*5 then if (curAMRes+curEMRes+curTHRes)<=40 then curKNRes = 20 end end\n            if cx > 384+stage*6 then if (curAMRes+curEMRes+curTHRes)<=35 then curKNRes = 25 end end\n            if cx > 384+stage*7 then if (curAMRes+curEMRes+curTHRes)<=30 then curKNRes = 30 end end\n            if cx > 384+stage*8 then if (curAMRes+curEMRes+curTHRes)<=25 then curKNRes = 35 end end\n            if cx > 384+stage*9 then if (curAMRes+curEMRes+curTHRes)<=20 then curKNRes = 40 end end\n            if cx > 384+stage*10 then if (curAMRes+curEMRes+curTHRes)<=15 then curKNRes = 45 end end\n            if cx > 384+stage*11 then if (curAMRes+curEMRes+curTHRes)<=10 then curKNRes = 50 end end\n            if cx > 384+stage*12 then if (curAMRes+curEMRes+curTHRes)<=5 then curKNRes = 55 end end\n            if cx > 384+stage*13 then if (curAMRes+curEMRes+curTHRes)==0 then curKNRes = 60 end end\n        end\n    end\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    addText(layer, nfont, '+'..prettyStr(curKNRes), 663, 362)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    if curKNRes == setKNRes then\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n        addText(layer, nfont, prettyStr(curKNRes+10), 703, 362)\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    else\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n        addText(layer, nfont, prettyStr(curKNRes+10), 703, 362)\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n    end\n    addBox(layer, 384, 380, stage*(curKNRes/5+2), 15)\n    setNextStrokeWidth(layer, 2)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    addLine(layer, 384+(stage*(setKNRes/5+2)), 380, 384+(stage*(setKNRes/5+2)), 395)\n    \n    setNextFillColor(layer, 0,0,0, 0)\n    setNextStrokeColor(layer, 0,0.1,0.1, 1)\n    setNextStrokeWidth(layer, 1)\n    addBox(layer, 384, 440, 350, 15)\n    if cx > 384 and cx < 874 and cy > 440 and cy < 455 then\n        if getCursorDown() then\n            curTHRes = 0\n            if cx > 384+stage*2 then if (curAMRes+curEMRes+curKNRes)<=55 then curTHRes = 5 end end\n            if cx > 384+stage*3 then if (curAMRes+curEMRes+curKNRes)<=50 then curTHRes = 10 end end\n            if cx > 384+stage*4 then if (curAMRes+curEMRes+curKNRes)<=45 then curTHRes = 15 end end\n            if cx > 384+stage*5 then if (curAMRes+curEMRes+curKNRes)<=40 then curTHRes = 20 end end\n            if cx > 384+stage*6 then if (curAMRes+curEMRes+curKNRes)<=35 then curTHRes = 25 end end\n            if cx > 384+stage*7 then if (curAMRes+curEMRes+curKNRes)<=30 then curTHRes = 30 end end\n            if cx > 384+stage*8 then if (curAMRes+curEMRes+curKNRes)<=25 then curTHRes = 35 end end\n            if cx > 384+stage*9 then if (curAMRes+curEMRes+curKNRes)<=20 then curTHRes = 40 end end\n            if cx > 384+stage*10 then if (curAMRes+curEMRes+curKNRes)<=15 then curTHRes = 45 end end\n            if cx > 384+stage*11 then if (curAMRes+curEMRes+curKNRes)<=10 then curTHRes = 50 end end\n            if cx > 384+stage*12 then if (curAMRes+curEMRes+curKNRes)<=5 then curTHRes = 55 end end\n            if cx > 384+stage*13 then if (curAMRes+curEMRes+curKNRes)==0 then curTHRes = 60 end end\n        end\n    end\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    addText(layer, nfont, '+'..prettyStr(curTHRes), 663, 422)\n    setNextTextAlign(layer, AlignH_Center, AlignV_Middle)\n    if curTHRes == setTHRes then\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n        addText(layer, nfont, prettyStr(curTHRes+10), 703, 422)\n        setNextFillColor(layer, color2.r,color2.g,color2.b, 1)\n    else\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n        addText(layer, nfont, prettyStr(curTHRes+10), 703, 422)\n        setNextFillColor(layer, color.r,color.g,color.b, 1)\n    end\n    addBox(layer, 384, 440, stage*(curTHRes/5+2), 15)\n    setNextStrokeWidth(layer, 2)\n    setNextStrokeColor(layer, 1, 1, 1, 1)\n    addLine(layer, 384+(stage*(setTHRes/5+2)), 440, 384+(stage*(setTHRes/5+2)), 455)\n    \n]]..screenLogo..[[\n    \n    \nend\n\n--------------------------------------------------------------------------------\n\n\ndrawCursor()\n--drawParams()\ndrawShieldBar()\ndrawResSettings()\ndrawButtons()\nif not newParams then drawPBWarn('START THE PROGRAMMING BOARD TO USE') end\n\nrequestAnimationFrame(1)\n\n]]\n\nfor key, screen in pairs(screens) do -- updating screens\n    screen.setScriptInput(json.encode(params))\n    screen.setRenderScript(renderScript)\n    screen.activate()\nend\n\n\n\nunit.setTimer('update',0.0001)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"local params = {\n    shieldState = shield.getState(),\n    shieldHP = shield.getShieldHitpoints(),\n    shieldMaxHP = shield.getMaxShieldHitpoints(),\n    shieldIsVenting = shield.isVenting(),\n    shieldVentingCooldown = shield.getVentingCooldown(),\n    shieldVentingMaxCooldown = shield.getVentingMaxCooldown(),\n    shieldResistances = shield.getResistances(),\n    shieldResistancesCooldown = shield.getResistancesCooldown(),\n    shieldResistancesMaxCooldown = shield.getResistancesMaxCooldown(),\n    shieldResistancesPool = shield.getResistancesPool(),\n    shieldResistancesRemaining = shield.getResistancesRemaining(),\n    shieldStressRatio = shield.getStressRatioRaw(),\n    lastTime = system.getTime()\n}\n\nfor key, screen in pairs(screens) do -- updating screens\n    screen.setScriptInput(json.encode(params))\nend\n","filter":{"args":[{"value":"update"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"1"},{"code":"local handlers = {}\nhandlers['Toggle'] = function() shield.toggle() end\nhandlers['StartVent'] = function() shield.startVenting() end\nhandlers['StopVent'] = function() shield.stopVenting() end\n\nfor key, screen in pairs(screens) do -- updating screens\n    local output = screen.getScriptOutput()\n    if #output > 0 then\n        screen.clearScriptOutput()\n        if handlers[output] then \n            handlers[output]() \n        else\n            local json = require('dkjson')\n            local res = json.decode(output) or {}  \n            shield.setResistances(res[1],res[2],res[3],res[4])\n        end\n    end\nend","filter":{"args":[],"signature":"update()","slotKey":"-2"},"key":"2"}],"methods":[],"events":[]}
